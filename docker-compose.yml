version: '3.8'

services:
  # Main application
  user-management-api:
    build: 
      context: .
      target: production
    container_name: user_management_api
    restart: unless-stopped
    environment:
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-here-change-this-in-production}
      - ALGORITHM=${ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///./data/user_management.db}
      - BCRYPT_ROUNDS=${BCRYPT_ROUNDS:-12}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-your-encryption-key-here-32-bytes}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123!}
      - ENABLE_IP_WHITELIST=${ENABLE_IP_WHITELIST:-false}
      - WHITELISTED_IPS=${WHITELISTED_IPS:-127.0.0.1,localhost}
      - RATE_LIMIT_PER_MINUTE=${RATE_LIMIT_PER_MINUTE:-60}
      - BATCH_LOG_INTERVAL_MINUTES=${BATCH_LOG_INTERVAL_MINUTES:-10}
      - MEMORY_THRESHOLD_MB=${MEMORY_THRESHOLD_MB:-100}
      - APP_NAME=${APP_NAME:-User Management API}
      - APP_VERSION=${APP_VERSION:-1.0.0}
      - DEBUG=${DEBUG:-false}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
    ports:
      - "8000:8000"
    volumes:
      - user_data:/app/data
      - user_logs:/app/logs
    depends_on:
      - redis
    networks:
      - user_management_network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=10)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: user_management_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - user_management_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: user_management_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - user-management-api
    networks:
      - user_management_network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  user_data:
    driver: local
  user_logs:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  user_management_network:
    driver: bridge